#  Student Management System (C#)

Этот проект демонстрирует работу с классом **Student**, который моделирует информацию о студентах, их оценках и предоставляет методы для анализа успеваемости по группам.

##  Описание

Класс `Student` хранит данные о:
- фамилии студента,
- номере группы,
- списке оценок.

Также реализованы методы для:
- вывода студентов по группам,
- подсчёта отличников,
- поиска студентов с одними двойками,
- доступа к отдельным оценкам через индексатор.

Проект можно использовать для практики по **ООП в C#**, работе с **массивами**, **LINQ** и **статическими методами**.

---

##  Возможности

- Проверка, состоит ли студент только из двоек (`AllGradesTwo`)
- Проверка, имеет ли студент только десятки (`AllGradesTen`)
- Подсчёт количества отличников в каждой группе (`CountExcellentStudents`)
- Вывод студентов по конкретной группе (`ResultSession`)
- Поиск и вывод студентов, у которых все оценки равны 2 (`PrintAllStudentsWithTwo`)
- Индексатор для доступа к отдельным оценкам (`this[int index]`)

---

##  Пример использования

```csharp
using System;
using System.Linq;

class Program
{
    static void Main()
    {
        Student[] students =
        {
            new Student("Ivanov", "A1", new int[] { 10, 10, 10 }),
            new Student("Petrov", "A1", new int[] { 2, 2, 2 }),
            new Student("Sidorov", "B1", new int[] { 9, 8, 7 }),
            new Student("Smirnova", "B1", new int[] { 10, 10, 10 })
        };

        Console.WriteLine("=== Students from group A1 ===");
        Student.ResultSession(students, "A1");

        Console.WriteLine("\n=== Excellent Students ===");
        Student.CountExcellentStudents(students);

        Console.WriteLine("\n=== Students with all grades = 2 ===");
        Student.PrintAllStudentsWithTwo(students);
    }
}

## Основные концепции
Инкапсуляция — поля студента защищены свойствами Surname, NumberGroup, Grades.

Индексаторы — реализован доступ к отдельной оценке через student[i].

LINQ — используется для фильтрации и сортировки студентов.

Статические методы — позволяют работать с массивом студентов без создания отдельных экземпляров класса.


